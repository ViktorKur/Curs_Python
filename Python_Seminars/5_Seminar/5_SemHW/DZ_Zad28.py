# Задача 28: Напишите рекурсивную функцию sum(a, b), 
# возвращающую сумму двух целых неотрицательных чисел. 
# Из всех арифметических операций допускаются только +1 и -1.
# Также нельзя использовать циклы.
# *Пример:*
# 2 2
# 4 
print("\033[H\033[J")
# 1й Вариант с разбором обоих входящих чисел по стопкам одновременно
# def SumCh(sum,n,k):
#   if n<1:
#     if k<1:
#       return sum
#     return SumCh(sum+1,n,k-1)
#   return SumCh(sum+1,n-1,k)
  
# a = abs(int(input("Ввведите целое неотрицательное число А: ")))
# b = abs(int(input("Ввведите целое неотрицательное число В: ")))
# print(f"{a} + {b} = {SumCh(0,a,b)}")  

# 2й Вариант с разбором обоих входящих чисел по стопкам поочереди
# def SumCh(i,sum,n):
#   if i>n-1:
#     return sum
#   sum+=1 
#   return SumCh(i+1,sum,n)
  
# a = int(input("Ввведите целое неотрицательное число А: "))
# b = int(input("Ввведите целое неотрицательное число В: "))
# print(f"{a} + {b} = {SumCh(0,0,a)+SumCh(0,0,b)}")  

# 3й Вариант с разбором меньшего числа по стопкам и прибавлением +1 к большему
def SumCh(n,k):
  if k<1:
    return n
  return SumCh(n+1,k-1)
  
a = abs(int(input("Ввведите целое неотрицательное число А: ")))
b = abs(int(input("Ввведите целое неотрицательное число В: ")))
if a>=b:
  print(f"{a} + {b} = {SumCh(a,b)}")  
else :
  print(f"{b} + {a} = {SumCh(b,a)}")  
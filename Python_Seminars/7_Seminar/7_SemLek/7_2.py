# Задача №49. Решение в группах Планеты вращаются вокруг звезд по эллиптическим орбитам. 
# Назовем самой далекой планетой ту, орбита которой имеет самую большую площадь. 
# Напишите функцию find_farthest_orbit(list_of_orbits), которая среди списка орбит планет
# найдет ту, по которой вращается самая далекая планета. Круговые орбиты не учитывайте: 
#   вы знаете, что у вашей звезды таких планет нет, зато искусственные спутники были были 
#   запущены на круговые орбиты. Результатом функции должен быть кортеж, 
#   содержащий длины полуосей эллипса орбиты самой далекой планеты. Каждая орбита 
#   представляет из себя кортеж из пары чисел - полуосей ее эллипса. Площадь эллипса
#   вычисляется по формуле S = pi*a*b, где a и b - длины полуосей эллипса. При решении
#   задачи используйте списочные выражения. Подсказка: проще всего будет найти эллипс 
#   в два шага: сначала вычислить самую большую площадь эллипса, а затем найти и сам эллипс,
#   имеющий такую  площадь. Гарантируется, что самая далекая планета ровно одна

# def find_farthest_orbit (orbits):
#   resut=0
#   res=""
#   for i in range(len(orbits)):
#     if orbits[i][0]==orbits[i][1]:
#       resut=resut
#     else:
#       temp=orbits[i][0]*orbits[i][1]  
#       if temp>resut:
#         resut=temp
#         res=orbits[i]   
#   return res

# orbits = [(1, 3), (2.5, 10), (7, 2), (6, 6), (41, 3)] 
# print(find_farthest_orbit(orbits))

# 2Й Вариант

def find_farthest_orbit (orb):
  pi=3.14
  s_orbits = {pi*val[0]*val[1]: val for val in orb if val[0]!=val[1]}
  return max(s_orbits.items())[1]
orbits = [(1, 3), (2.5, 10), (7, 2), (6, 6), (41, 3)] 
print(find_farthest_orbit(orbits))
